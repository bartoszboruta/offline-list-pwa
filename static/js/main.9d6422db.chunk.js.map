{"version":3,"sources":["components/Todo/Context.js","components/Todo/Add.js","components/Todo/Filters/NameFilter.js","components/Header.js","components/Todo/Todo.js","utils/parsers/date.js","components/Todo/List.js","utils/db.js","components/Todo/index.js","App.js","serviceWorker.js","index.js"],"names":["TodoContext","React","createContext","active","done","filteredTodos","nameFilter","onAddTodo","onChangeNameFilter","onRemoveTodo","onToggle","onUpdateTodo","showAddField","showNameFilter","todos","Add","useContext","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","expireDate","setExpireDate","react_default","a","createElement","className","onChange","_ref","value","target","placeholder","_ref2","type","disabled","onClick","NameFilter","_useContext","Header","searchClassName","classnames","addClassName","Todo","todo","expireDays","now","Date","_expireDate","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","expireText","concat","abs","getExpireDateText","titleClassName","checked","checkboxClassName","dateClassName","expired","today","tomorrow","List","map","components_Todo_Todo","key","id","db","Dexie","version","stores","Container","state","localStorage","getItem","componentDidMount","_this","_getTodos","table","toArray","then","setState","sort","prev","next","_applyFilters","_handleAddTodo","createdAt","updatedAt","add","_handleUpdateTodo","update","_handleRemoveTodo","_ref3","delete","_this$state","filter","_ref4","toLowerCase","includes","_handleNameFilterChange","_ref5","setItem","_handleToggle","toggleName","_toggleValue","defineProperty","_updateCounter","length","_this$state2","this","Provider","components_Header","Filters_NameFilter","Todo_Add","Todo_List","Component","App","components_Todo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d6422db.chunk.js","sourcesContent":["import React from 'react'\n\nexport const TodoContext = React.createContext({\n  active: 0,\n  done: 0,\n  filteredTodos: [],\n  nameFilter: '',\n  onAddTodo: () => {},\n  onChangeNameFilter: () => {},\n  onRemoveTodo: () => {},\n  onToggle: () => {},\n  onUpdateTodo: () => {},\n  showAddField: '',\n  showNameFilter: '',\n  todos: [],\n})\n","import React, { useContext, useState } from 'react'\n\nimport { TodoContext } from './Context'\n\nconst Add = () => {\n  const { onAddTodo } = useContext(TodoContext)\n  const [title, setTitle] = useState('')\n  const [expireDate, setExpireDate] = useState('')\n\n  const submit = () => {\n    setTitle('')\n    setExpireDate('')\n    onAddTodo({ expireDate, title })\n  }\n\n  return (\n    <div className=\"add\">\n      <div className=\"group\">\n        <input\n          onChange={({ target: { value } }) => setTitle(value)}\n          placeholder=\"New task\"\n          title=\"title\"\n          value={title}\n        />\n        <span className=\"highlight\" />\n        <span className=\"bar\" />\n      </div>\n      <div>\n        <div className=\"group\">\n          <input\n            onChange={({ target: { value } }) => setExpireDate(value)}\n            type=\"date\"\n            value={expireDate}\n          />\n          <span className=\"highlight\" />\n          <span className=\"bar\" />\n        </div>\n      </div>\n\n      <button className=\"btn\" disabled={!title} onClick={submit}>\n        Add\n      </button>\n    </div>\n  )\n}\n\nexport default Add\n","import React, { useContext } from 'react'\n\nimport { TodoContext } from '../Context'\n\nconst NameFilter = () => {\n  const { onChangeNameFilter, nameFilter } = useContext(TodoContext)\n\n  return (\n    <div className=\"nameFilter\">\n      <div className=\"group\">\n        <input onChange={onChangeNameFilter} placeholder=\"Search\" value={nameFilter} />\n        <span className=\"highlight\" />\n        <span className=\"bar\" />\n      </div>\n    </div>\n  )\n}\n\nexport default NameFilter\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\nimport { TodoContext } from './Todo/Context'\n\nconst Header = () => {\n  const { showNameFilter, showAddField, onToggle } = useContext(TodoContext)\n  const searchClassName = classnames('fa fa-search icon', {\n    active: showNameFilter,\n  })\n  const addClassName = classnames('fa fa-plus icon', {\n    active: showAddField,\n  })\n\n  return (\n    <div className=\"header\">\n      <i className={searchClassName} onClick={() => onToggle('showNameFilter')} />\n      <i>Tasks</i>\n      <i className={addClassName} onClick={() => onToggle('showAddField')} />\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\nimport { TodoContext } from './Context'\nimport { dateDiffInDays, getExpireDateText } from '../../utils/parsers/date'\n\nconst Todo = ({ todo }) => {\n  const { onRemoveTodo, onUpdateTodo } = useContext(TodoContext)\n  const { done, expireDate, title } = todo\n  const expireDays = dateDiffInDays(expireDate)\n  const expireText = getExpireDateText(expireDays)\n\n  const titleClassName = classnames('todo__title', {\n    checked: done,\n  })\n\n  const checkboxClassName = classnames('fa fa-check-circle', {\n    checked: done,\n  })\n\n  const dateClassName = classnames('todo__date', {\n    expired: expireDays < 0 && !done,\n    today: expireDays === 0,\n    tomorrow: expireDays === 1,\n  })\n\n  return (\n    <div className=\"todo\">\n      <div className={dateClassName}>{expireText}</div>\n      <div className=\"todo__container\">\n        <i className=\"todo__remove fa fa-minus-circle\" onClick={onRemoveTodo(todo)} />\n        <div className={titleClassName}>{title}</div>\n        <div className=\"todo__input\">\n          <label className=\"label\">\n            <input\n              checked={done}\n              className=\"label__checkbox\"\n              onChange={onUpdateTodo(todo)}\n              type=\"checkbox\"\n            />\n            <i className={checkboxClassName} />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n","export const dateDiffInDays = expireDate => {\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24\n  if (!expireDate) {\n    return\n  }\n  const now = new Date()\n  const _expireDate = new Date(expireDate)\n  const utc1 = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate())\n  const utc2 = Date.UTC(_expireDate.getFullYear(), _expireDate.getMonth(), _expireDate.getDate())\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY)\n}\n\nexport const getExpireDateText = expireDays => {\n  if (expireDays === 0) return 'expires today'\n  if (expireDays === 1) return 'expires tomorrow'\n  if (expireDays > 30) return 'expires in +30 days'\n  if (expireDays > 0 && expireDays < 30) return `expires in ${expireDays} days`\n  if (expireDays === -1) return 'expired yesterday'\n  if (expireDays < -1) return `expired ${Math.abs(expireDays)} days ago`\n  if (!expireDays) return ''\n}\n","import React, { useContext } from 'react'\n\nimport Todo from './Todo'\nimport { TodoContext } from './Context'\n\nconst List = () => {\n  const { filteredTodos } = useContext(TodoContext)\n\n  return <div className=\"list\">{filteredTodos.map(todo => <Todo key={todo.id} todo={todo} />)}</div>\n}\n\nexport default List\n","import Dexie from 'dexie'\n\nconst db = new Dexie('TodoList')\ndb.version(1).stores({ todos: '++id' })\n\nexport default db\n","import React, { Component } from 'react'\n\nimport Add from './Add'\nimport NameFilter from './Filters/NameFilter'\nimport Header from '../Header'\nimport List from './List'\nimport db from '../../utils/db'\nimport { TodoContext } from './Context'\n\nclass Container extends Component {\n  state = {\n    active: 0,\n    done: 0,\n    filteredTodos: [],\n    nameFilter: localStorage.getItem('nameFilter') || '',\n    showAddField: localStorage.getItem('showAddField') === 'true' ? true : false,\n    showNameFilter: localStorage.getItem('showNameFilter') === 'true' ? true : false,\n    todos: [],\n  }\n\n  componentDidMount = () => {\n    this._getTodos()\n  }\n\n  _getTodos = () => {\n    db\n      .table('todos')\n      .toArray()\n      .then(todos => {\n        this.setState(\n          {\n            todos: todos.sort((prev, next) => {\n              return next.id - prev.id\n            }),\n          },\n          () => {\n            // this._updateCounter()\n            this._applyFilters()\n          },\n        )\n      })\n  }\n\n  _handleAddTodo = ({ expireDate, title }) => {\n    const todo = {\n      createdAt: new Date(),\n      done: false,\n      expireDate,\n      updatedAt: new Date(),\n      title,\n    }\n\n    db\n      .table('todos')\n      .add(todo)\n      .then(this._getTodos)\n  }\n\n  _handleUpdateTodo = ({ done, id }) => () => {\n    db\n      .table('todos')\n      .update(id, { done: !done, updatedAt: new Date() })\n      .then(this._getTodos)\n  }\n\n  _handleRemoveTodo = ({ id }) => () => {\n    db\n      .table('todos')\n      .delete(id)\n      .then(this._getTodos)\n  }\n\n  _applyFilters = () => {\n    const { nameFilter, todos } = this.state\n    const filteredTodos = todos.filter(({ title }) => {\n      return title.toLowerCase().includes(nameFilter.toLowerCase())\n    })\n\n    this.setState({ filteredTodos })\n  }\n\n  _handleNameFilterChange = ({ target: { value } }) => {\n    this.setState({ nameFilter: value }, () => {\n      localStorage.setItem('nameFilter', value)\n      this._applyFilters()\n    })\n  }\n\n  _handleToggle = toggleName => {\n    if (!toggleName) {\n      return\n    }\n\n    const _toggleValue = this.state[toggleName]\n\n    this.setState({ [toggleName]: !_toggleValue }, () => {\n      localStorage.setItem(toggleName, !_toggleValue)\n\n      if (toggleName === 'showNameFilter' && _toggleValue) {\n        this._handleNameFilterChange({ target: { value: '' } })\n      }\n    })\n  }\n\n  _updateCounter = () => {\n    const { filteredTodos } = this.state\n    const active = filteredTodos.filter(todo => !todo.done).length\n    const done = filteredTodos.filter(todo => todo.done).length\n\n    this.setState({ active, done })\n  }\n\n  render() {\n    const { nameFilter, todos, filteredTodos, showNameFilter, showAddField } = this.state\n\n    return (\n      <TodoContext.Provider\n        value={{\n          filteredTodos,\n          nameFilter,\n          onAddTodo: this._handleAddTodo,\n          onChangeNameFilter: this._handleNameFilterChange,\n          onRemoveTodo: this._handleRemoveTodo,\n          onToggle: this._handleToggle,\n          onUpdateTodo: this._handleUpdateTodo,\n          showAddField,\n          showNameFilter,\n          todos,\n        }}\n      >\n        <Header />\n        <div className=\"container\">\n          <div>\n            {showNameFilter && <NameFilter />}\n            {showAddField && <Add />}\n          </div>\n          <List />\n        </div>\n      </TodoContext.Provider>\n    )\n  }\n}\n\nexport default Container\n","import React, { Component } from 'react'\n\nimport Todo from './components/Todo'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}