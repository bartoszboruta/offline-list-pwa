{"version":3,"sources":["components/Todo/Todo.js","utils/parsers/date.js","components/Todo/List.js"],"names":["Todo","_ref","todo","_useContext","useContext","TodoContext","onRemoveTodo","onUpdateTodo","done","expireDate","title","expireDays","now","Date","_expireDate","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","expireText","concat","abs","getExpireDateText","titleClassName","classnames","checked","checkboxClassName","dateClassName","expired","today","tomorrow","react_default","a","createElement","className","onClick","onChange","type","List","filteredTodos","map","components_Todo_Todo","key","id"],"mappings":"2IAgDeA,EA1CF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EACcC,qBAAWC,KAA1CC,EADiBH,EACjBG,aAAcC,EADGJ,EACHI,aACdC,EAA4BN,EAA5BM,KAAMC,EAAsBP,EAAtBO,WAAYC,EAAUR,EAAVQ,MACpBC,ECTsB,SAAAF,GAE5B,GAAKA,EAAL,CAGA,IAAMG,EAAM,IAAIC,KACVC,EAAc,IAAID,KAAKJ,GACvBM,EAAOF,KAAKG,IAAIJ,EAAIK,cAAeL,EAAIM,WAAYN,EAAIO,WACvDC,EAAOP,KAAKG,IAAIF,EAAYG,cAAeH,EAAYI,WAAYJ,EAAYK,WAErF,OAAOE,KAAKC,OAAOF,EAAOL,GATN,QDQDQ,CAAed,GAC5Be,ECGyB,SAAAb,GAC/B,OAAmB,IAAfA,EAAyB,gBACV,IAAfA,EAAyB,mBACzBA,EAAa,GAAW,sBACxBA,EAAa,GAAKA,EAAa,GAAI,cAAAc,OAAqBd,EAArB,UACnB,IAAhBA,EAA0B,oBAC1BA,GAAc,EAAG,WAAAc,OAAkBJ,KAAKK,IAAIf,GAA3B,aAChBA,OAAL,EAAwB,GDVLgB,CAAkBhB,GAE/BiB,EAAiBC,IAAW,cAAe,CAC/CC,QAAStB,IAGLuB,EAAoBF,IAAW,qBAAsB,CACzDC,QAAStB,IAGLwB,EAAgBH,IAAW,aAAc,CAC7CI,QAAStB,EAAa,IAAMH,EAC5B0B,MAAsB,IAAfvB,IAAqBH,EAC5B2B,SAAyB,IAAfxB,IAAqBH,IAGjC,OACE4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,GAAgBR,GAChCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAkCC,QAASlC,EAAaJ,KACrEkC,EAAAC,EAAAC,cAAA,OAAKC,UAAWX,GAAiBlB,GACjC0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SACER,QAAStB,EACT+B,UAAU,kBACVE,SAAUlC,EAAaL,GACvBwC,KAAK,aAEPN,EAAAC,EAAAC,cAAA,KAAGC,UAAWR,SE7BXY,UANF,WAAM,IACTC,EAAkBxC,qBAAWC,KAA7BuC,cAER,OAAOR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQK,EAAcC,IAAI,SAAA3C,GAAI,OAAIkC,EAAAC,EAAAC,cAACQ,EAAD,CAAMC,IAAK7C,EAAK8C,GAAI9C,KAAMA","file":"static/js/1.a93f4ca8.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\nimport { TodoContext } from './Context'\nimport { dateDiffInDays, getExpireDateText } from '../../utils/parsers/date'\n\nconst Todo = ({ todo }) => {\n  const { onRemoveTodo, onUpdateTodo } = useContext(TodoContext)\n  const { done, expireDate, title } = todo\n  const expireDays = dateDiffInDays(expireDate)\n  const expireText = getExpireDateText(expireDays)\n\n  const titleClassName = classnames('todo__title', {\n    checked: done,\n  })\n\n  const checkboxClassName = classnames('fa fa-check-circle', {\n    checked: done,\n  })\n\n  const dateClassName = classnames('todo__date', {\n    expired: expireDays < 0 && !done,\n    today: expireDays === 0 && !done,\n    tomorrow: expireDays === 1 && !done,\n  })\n\n  return (\n    <div className=\"todo\">\n      <div className={dateClassName}>{expireText}</div>\n      <div className=\"todo__container\">\n        <i className=\"todo__remove fa fa-minus-circle\" onClick={onRemoveTodo(todo)} />\n        <div className={titleClassName}>{title}</div>\n        <div className=\"todo__input\">\n          <label className=\"label\">\n            <input\n              checked={done}\n              className=\"label__checkbox\"\n              onChange={onUpdateTodo(todo)}\n              type=\"checkbox\"\n            />\n            <i className={checkboxClassName} />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n","export const dateDiffInDays = expireDate => {\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24\n  if (!expireDate) {\n    return\n  }\n  const now = new Date()\n  const _expireDate = new Date(expireDate)\n  const utc1 = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate())\n  const utc2 = Date.UTC(_expireDate.getFullYear(), _expireDate.getMonth(), _expireDate.getDate())\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY)\n}\n\nexport const getExpireDateText = expireDays => {\n  if (expireDays === 0) return 'expires today'\n  if (expireDays === 1) return 'expires tomorrow'\n  if (expireDays > 30) return 'expires in +30 days'\n  if (expireDays > 0 && expireDays < 30) return `expires in ${expireDays} days`\n  if (expireDays === -1) return 'expired yesterday'\n  if (expireDays < -1) return `expired ${Math.abs(expireDays)} days ago`\n  if (!expireDays) return ''\n}\n","import React, { useContext } from 'react'\n\nimport Todo from './Todo'\nimport { TodoContext } from './Context'\n\nconst List = () => {\n  const { filteredTodos } = useContext(TodoContext)\n\n  return <div className=\"list\">{filteredTodos.map(todo => <Todo key={todo.id} todo={todo} />)}</div>\n}\n\nexport default List\n"],"sourceRoot":""}